## Simple workflow for deploying static content to GitHub Pages
#name: Deploy manup.dev to Github Pages
#
#on:
#  # Runs on pushes targeting the default branch
#  push:
#    branches: ['master']
#
#  # Allows you to run this workflow manually from the Actions tab
#  workflow_dispatch:
#
## Sets the GITHUB_TOKEN permissions to allow deployment to GitHub Pages
#permissions:
#  contents: read
#  pages: write
#  id-token: write
#
## Allow one concurrent deployment
#concurrency:
#  group: 'pages'
#  cancel-in-progress: true
#
#jobs:
#  # Single deploy job since we're just deploying
#  deploy-to-github-pages:
#    environment:
#      name: github-pages
#      url: ${{ steps.deployment.outputs.page_url }}
#
#    runs-on: ubuntu-latest
#    steps:
#      - name: üì• Checkout
#        uses: actions/checkout@v4
#
#      - name: üîß Set up Node
#        uses: actions/setup-node@v4
#
#      - name: üì• Install dependencies
#        run: yarn
#
#      - name: üîç Run ESLint
#        run: yarn lint
#
#      - name: üõ†Ô∏è Build
#        env:
#          VITE_GOOGLE_ANALYTICS_ID: ${{ secrets.GOOGLE_ANALYTICS_ID }}
#        run: yarn build
#
#      - name: üåé Setup Pages
#        uses: actions/configure-pages@v4
#
#      - name: üì§ Upload artifact
#        uses: actions/upload-pages-artifact@v3
#        with:
#          # Upload dist folder
#          path: './dist'
#
#      - name: üöÄ Deploy to GitHub Pages
#        id: deployment
#        uses: actions/deploy-pages@v4
#
#      # Reference to send messages to Slack from Github Actions:
#      - name: ‚úçüèª Build Slack message
#        id: build_slack_message
#        uses: actions/github-script@v7
#        with:
#          script: |
#            const { payload } = context;
#            const { commits } = payload;
#            const commitsParsed = commits.map((commit) => `>*\`${commit.id.slice(0, 7)}\`* - *${commit.message.split('\n\n')[0]}*`).join("\n");
#            const { name: authorName } = payload.head_commit.author;
#            const branch = payload.ref.replace("refs/heads/", "");
#
#            const message = `
#            :white_check_mark: ${commits.length > 1 ? "New commits" : "New commit"}! by *_${authorName}_* on branch *${branch}* :tada:
#            ${commitsParsed}
#            ‚Ä¢ Updates are available at https://manup.dev :rocket:
#            `;
#
#            core.setOutput('slack_message', message);
#
#      - name: ‚úâÔ∏è Send message to Slack
#        id: slack
#        uses: slackapi/slack-github-action@v1.27.0
#        env:
#          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
#        with:
#          channel-id: '${{ secrets.SLACK_CHANNEL_ID }}'
#          slack-message: ${{ steps.build_slack_message.outputs.slack_message }}
#
#  # New job to send Slack notification if any step fails
#  notify-failure:
#    runs-on: ubuntu-latest
#    needs: deploy-to-github-pages
#    if: needs.deploy-to-github-pages.result == 'failure'
#    steps:
#      - name: ‚úçüèª Build Slack failure message
#        id: build_slack_failure_message
#        uses: actions/github-script@v7
#        with:
#          script: |
#            const { payload } = context;
#            const { name: authorName } = payload.head_commit.author;
#            const branch = payload.ref.replace("refs/heads/", "");
#            const workflowName = context.workflow;
#            const workflowNumber = context.runNumber;
#            const workflowUrl = `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`;
#
#            const message = `
#            :x: Workflow by *_${authorName}_* failed on branch *${branch}* :warning:
#            > Check logs for details from workflow: <${workflowUrl}|${context.workflow}#${workflowNumber}>.
#            `;
#            core.setOutput('slack_message', message);
#
#      - name: ‚úâÔ∏è Send failure message to Slack
#        uses: slackapi/slack-github-action@v1.27.0
#        env:
#          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
#        with:
#          channel-id: '${{ secrets.SLACK_CHANNEL_ID }}'
#          slack-message: ${{ steps.build_slack_failure_message.outputs.slack_message }}
